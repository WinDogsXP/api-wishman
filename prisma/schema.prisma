generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  App           App[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model App {
  id        String     @id @default(uuid())
  developer User       @relation(fields: [userId], references: [id])
  name      String
  userId    String
  Endpoint  Endpoint[]
}

model Endpoint {
  id           String         @id @default(uuid())
  app          App            @relation(fields: [appId], references: [id])
  appId        String
  url          String
  headers      String
  body         String
  interval     Int
  isBugged     Boolean
  EndpointCall EndpointCall[]
  BugReport    BugReport[]
}

model EndpointCall {
  id          String   @id @default(uuid())
  endpoint    Endpoint @relation(fields: [endpointId], references: [id])
  date        DateTime @default(now())
  duration    Int
  endpointId  String
  status_code Int
  status      String
}

model BugReport {
  id          String   @id @default(uuid())
  endpoint    Endpoint @relation(fields: [endpointId], references: [id])
  report_date DateTime @default(now())
  solve_date  DateTime
  details     String
  endpointId  String
}
